server:
  port: 8801

spring:
  cache:
    type: redis
    redis:
      # 设置默认过期时间为 600秒（10分钟）
      time-to-live: 600s
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    url: jdbc:postgresql://192.168.2.130:5432/usermanagement_db?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: admin2018
#    url: jdbc:postgresql://10.101.32.84:5432/Accounts_db?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
#    driver-class-name: org.postgresql.Driver
#    username: dev_ch_rw
#    password: Password#!Sd2024
    druid:
      # 初始化大小
      initial-size: 5
      # 最小连接数
      min-idle: 10
      # 最大连接数
      max-active: 20
      # 获取连接时的最大等待时间
      max-wait: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计
      filters: stat,wall
      # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      validation-query: SELECT 1
      # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
      test-on-borrow: true
      # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
      test-on-return: true
      # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
      test-while-idle: true
      # 是否开启 StatViewServlet
      stat-view-servlet:
        enabled: true
        # 访问监控页面 白名单，默认127.0.0.1
        allow: 127.0.0.1
        login-username: admin
        login-password: admin
      # FilterStat
      filter:
        stat:
          # 是否开启 FilterStat，默认true
          enabled: true
          # 是否开启 慢SQL 记录，默认false
          log-slow-sql: true
          # 慢 SQL 的标准，默认 3000，单位：毫秒
          slow-sql-millis: 5000
          # 合并多个连接池的监控数据，默认false
          merge-sql: false
  data:
    redis:
      host: 192.168.2.130
      port: 6379
      password: admin
      lettuce:
        pool:
          max-active: 20  #最大连接数，负值表示没有限制，默认8
          max-wait: -1    #最大阻塞等待时间，负值表示没限制，默认-1
          max-idle: 8     #最大空闲连接，默认8
          min-idle: 0     #最小空闲连接，默认0
          dnsMonitoringInterval: 5000
      redisson:
        # 单节点配置
        singleServerConfig:
          # 连接空闲超时，单位：毫秒
          idleConnectionTimeout: 10000
          # 连接超时，单位：毫秒
          connectTimeout: 10000
          # 命令等待超时，单位：毫秒
          timeout: 3000
          # 命令失败重试次数,如果尝试达到 retryAttempts（命令失败重试次数） 仍然不能将命令发送至某个指定的节点时，将抛出错误。
          # 如果尝试在此限制之内发送成功，则开始启用 timeout（命令等待超时） 计时。
          retryAttempts: 3
          # 命令重试发送时间间隔，单位：毫秒
          retryInterval: 1500
          # 单个连接最大订阅数量
          subscriptionsPerConnection: 5
          # 发布和订阅连接的最小空闲连接数
          subscriptionConnectionMinimumIdleSize: 1
          # 发布和订阅连接池大小
          subscriptionConnectionPoolSize: 50
          # 最小空闲连接数
          connectionMinimumIdleSize: 32
          # 连接池大小
          connectionPoolSize: 64
          # DNS监测时间间隔，单位：毫秒
          dnsMonitoringInterval: 5000
          ########### 集群模式 ###############################
          #cluster:
          #nodes: 127.0.0.1:6379,127.0.0.2:6379,127.0.0.3:6379
          ########### 哨兵模式 ################################
          #sentinel:
          #master: 127.0.0.1:6379, # Sentinel中配置的主节点名称
          #nodes: 127.0.0.2:6379,127.0.0.3:6379
        # 官方文档教程：https://github.com/redisson/redisson/wiki/Table-of-Content

mybatis-plus:
  configuration:
    cache-enabled: true
    use-generated-keys: true
    default-executor-type: REUSE
    use-actual-param-name: true
    default-enum-type-handler: com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      update-strategy: not_null
      id-type: auto
  mapper-locations: classpath:/com/oneforma/usermanagement/mapper/xml/*Mapper.xml

logging:
  level:
    com.hmall: debug
  pattern:
    dateformat: HH:mm:ss:SSS
  file:
    path: "logs/${spring.application.name}"


auth:
  service:
    baseUrl: http://10.29.29.115/common/authsvc/api/
    clientId: cde875c3-82a9-4a60-b7ff-d4a96b87fc5c
    clientSecret: ADr9P)jOs@F!W=co4jxNJSa%4YL7AQuM
    subTenant: oneformacommonservice
    token-expire-time: 32400 # 9 hours  secondRequestLinkContextAutoConfiguration
    refresh-token-expire-time: 82800 #23 hours  second
    recovery-key-secret: z/yAKXDdpwtCkfIDSYCkHu8z5dSbglS3Ovk628oTlGQ=


